/// <reference types="node" />
import { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http';
import { Socket } from 'net';
export declare type AllowedMethods = 'GET' | 'POST' | 'PUT' | 'DELETE';
export interface RequestOptions {
    headers?: OutgoingHttpHeaders | undefined;
    auth?: string | null | undefined;
    body?: Record<string, any> | string;
    secure?: boolean | undefined;
}
export interface HttpResponse {
    statusCode?: number | undefined;
    statusMessage?: string | undefined;
    method?: string | undefined;
    url?: string | undefined;
    headers: IncomingHttpHeaders;
    rawHeaders: string[];
    socket: Socket;
    readonly searchParams: URLSearchParams;
    body?: Record<string, any>;
}
declare const request: (method: AllowedMethods, url: string, options?: RequestOptions) => Promise<HttpResponse>;
export default request;
